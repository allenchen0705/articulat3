
name: Deploy worker

on:
  workflow_dispatch:
    inputs:
      user:
        description: 'The username to use for the worker using SSH'
      server:
        description: 'The IP address or DNS hostname of the target server'
      temporal_host_port:
        description: 'Temporal host port for the worker to accept jobs from'

# Construct a concurrency group to be shared across workflow runs.
# The default behavior ensures that only one is running at a time, with
# all others queuing and thus not interrupting runs that are in-flight.
concurrency: ${{ github.workflow }}

permissions:
  contents: read

jobs:
  echo-inputs:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Echo Inputs
        run: |
          echo ref: ${{ github.event.inputs.ref }}
          echo commit: ${{ github.event.inputs.commit }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check out specific ref
        if: ${{ github.event_name == 'workflow_dispatch' }} && ${{ inputs.ref != ''}}
        run: git checkout ${{ inputs.ref }}

      - name: Check out specific commit
        if: ${{ github.event_name == 'workflow_dispatch' }} && ${{ inputs.commit != ''}}
        run: git checkout ${{ inputs.commit }}

      # - name: Load SSH key in production ingress droplet
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.DROPLET_SSH_PRIVATE_KEY_PRODUCTION }}
      #     known_hosts: ${{ secrets.SSH_KNOWN_HOSTS_OF_PRODUCTION }}
      #     if_key_exists: "ignore"

      # - name: Load SSH key in production staging droplet
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.DROPLET_SSH_PRIVATE_KEY_STAGING }}
      #     known_hosts: ${{ secrets.SSH_KNOWN_HOSTS_OF_STAGING }}
      #     if_key_exists: "ignore"

      - name: Install Nomad
        env:
          NOMAD_VERSION: "1.4.1"
        run: |
          curl -Os https://releases.hashicorp.com/nomad/${NOMAD_VERSION}/nomad_${NOMAD_VERSION}_linux_$(dpkg --print-architecture).zip
          unzip nomad_${NOMAD_VERSION}_linux_$(dpkg --print-architecture).zip -d /usr/local/bin
          chmod +x /usr/local/bin/nomad
          
      # - name: Install Nix
      #   uses: cachix/install-nix-action@v22
      #   with:
      #     extra_nix_config: |
      #       experimental-features = nix-command flakes
      #       accept-flake-config = true
        
      - name: Deploy
        shell: bash
        run: |
          export INGRESS_DROPLET_IP=
          export SSH_KEY=

          case "${{ github.event.inputs.environment }}" in
          production)
            export INGRESS_DROPLET_IP="${{ secrets.INGRESS_DROPLET_IP_PRODUCTION }}"
            export SSH_KEY="${{ secrets.WORKER0_PRODUCTION }}"
            ;;
          staging)
            export INGRESS_DROPLET_IP="${{ secrets.INGRESS_DROPLET_IP_STAGING }}"
            export SSH_KEY="${{ secrets.WORKER0_STAGING }}"
            ;;
          *)
            echo "Unknown deploy environment"
            exit 1
            ;;
          esac

          mkdir ~/.ssh
          ssh-keyscan -H $INGRESS_DROPLET_IP >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ inputs.server }} >> ~/.ssh/known_hosts
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.DROPLET_SSH_PRIVATE_KEY_STAGING }}"
          ssh-add - <<< "$SSH_KEY"

          ssh -fN -v -L 4646:127.0.0.1:4646 root@$INGRESS_DROPLET_IP
          
          nomad run \
            -var "user=${{ inputs.user }}" \
            -var "server=${{ inputs.server }}" \
            -var "temporal_host_port=${INGRESS_DROPLET_IP}:7233" \
            deploy/worker.nomad
