openapi: 3.0.0
info:
  version: 1.0.0
  title: articulate API
  description: API Documentation for articulate
  license:
    name: MIT License
    url: >-
      https://github.com/csc301-2023-fall/project-44-toronto-intelligence-m/blob/main/LICENSE
servers:
  - url: '{protocol}://{host}:{port}'
    description: The articulate backend server
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
      port:
        default: '8080'
paths:
  /v1/health:
    get:
      summary: Retrieve health status
      operationId: getHealth
      tags:
        - health
      description: Checks the health of articulate
      responses:
        '200':
          description: Healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        default:
          description: Unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /v1/prompts:
    post:
      summary: Create a prompt
      operationId: createPrompt
      tags:
        - prompts
      description: |
        Creates a new prompt
      requestBody:
        description: Prompt to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Retrieve all prompts
      operationId: getPrompts
      description: Retrieves metadata for all prompts
      tags:
        - prompts
      parameters:
        - name: page
          in: query
          description: A cursor for pagination across multiple pages.
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: A limit on the number of objects returned.
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptsResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/v1/prompts/{id}':
    get:
      summary: Retrieve a prompt
      operationId: getPromptByID
      description: >
        Retrieves the details of an existing prompt. After supplying the unique
        prompt ID, the prompt is returned.
      tags:
        - prompts
      parameters:
        - name: id
          in: path
          description: Unique identifier for the prompt.
          required: true
          schema:
            type: string
            example: prompt_3a84a3a23423489adfaa74aA
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/blobs:
    post:
      summary: Create a blob
      operationId: createBlob
      tags:
        - blobs
      description: >
        Creates a blob by sending a request of type `binary`. Include the blob
        to upload in the request and the blob parameters that should be used for
        saving the blob. 
      requestBody:
        description: A blob to create and parameters used for saving.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/v1/blobs/{id}':
    get:
      summary: Retrieve a blob
      operationId: getBlobByID
      description: >
        Retrieves the details of an existing blob along with a presigned URL to
        download the blob. After supplying the unique blob ID, the blob is
        returned.
      tags:
        - blobs
      parameters:
        - name: id
          in: path
          description: Unique identifier for the blob.
          required: true
          schema:
            type: string
            example: blob_3a84a3a23423489adfaa74aA
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    PromptRequest:
      type: object
      additionalProperties: false
      properties:
        prompt:
          $ref: '#/components/schemas/Prompt'
      required:
        - prompt
    PromptsResponse:
      type: object
      additionalProperties: false
      properties:
        prompts:
          type: array
          items:
            $ref: '#/components/schemas/Prompt'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - request_id
    PromptResponse:
      type: object
      additionalProperties: false
      properties:
        prompt:
          $ref: '#/components/schemas/Prompt'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - request_id
    ObjectFiles:
      type: object
      additionalProperties: false
      properties:
        texture_blob_id:
          description: Unique identifier for the texture blob.
          type: string
          pattern: '/blob_[0-9a-fA-F]+/'''
          example: blob_3a84a3a23423489adfaa74aA
        material_definition_blob_id:
          description: Unique identifier for the material definition blob.
          type: string
          pattern: '/blob_[0-9a-fA-F]+/'''
          example: blob_3a84a3a23423489adfaa74aA
        object_model_blob_id:
          description: Unique identifier for the object model blob.
          type: string
          pattern: '/blob_[0-9a-fA-F]+/'''
          example: blob_3a84a3a23423489adfaa74aA
        object_thumbnail_blob_id:
          description: Unique identifier for the object thumbnail blob.
          type: string
          pattern: '/blob_[0-9a-fA-F]+/'''
          example: blob_3a84a3a23423489adfaa74aA
    BlobRequest:
      type: object
      additionalProperties: false
      properties:
        blob:
          $ref: '#/components/schemas/Blob'
        path:
          description: Path to the object in the sender's filesystem.
          type: string
          example: '@/path/to/a/blob.obj'
      required:
        - blob
        - path
    BlobResponse:
      type: object
      additionalProperties: false
      properties:
        blob:
          $ref: '#/components/schemas/Blob'
        url:
          description: A presigned url to download the blob.
          type: string
          example: 'ttps://storage.googleapis.com/example-bucket/model.obj?...'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - request_id
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - error
        - request_id
    Prompt:
      type: object
      additionalProperties: true
      properties:
        id:
          description: Unique identifier for the prompt.
          type: string
          pattern: '/prompt_[0-9a-fA-F]+/'''
          example: prompt_3a84a3a23423489adfaa74aA
        prompt:
          description: The human readable text of this prompt.
          type: string
          example: >-
            a zoomed out DSLR photo of a baby bunny sitting on top of a stack of
            pancakes
        model:
          description: The model used to generate the content.
          type: string
          enum:
            - dreamfusion_stable-diffusion
            - dreamfusion_deepfloyd-if
          example: dreamfusion_stable-diffusion
        obj:
          $ref: '#/components/schemas/ObjectFiles'
      required:
        - id
        - prompt
        - model
      example:
        id: prompt_3a84a3a23423489adfaa74aA
        prompt: >-
          a zoomed out DSLR photo of a baby bunny sitting on top of a stack of
          pancakes
        model: dreamfusion_stable-diffusion
    Blob:
      type: object
      additionalProperties: false
      properties:
        id:
          description: Unique identifier for the blob.
          type: string
          pattern: '/blob_[0-9a-fA-F]+/'''
          example: blob_3a84a3a23423489adfaa74aA
        created:
          description: >-
            Time at which the blob was created. Measured in seconds since the
            Unix epoch.
          type: integer
          example: 1697134565
        filename:
          decription: The name for saving the blob to a filesystem.
          type: string
          example: model.obj
        type:
          desciprtion: 'The extension of the blob (for example, obj, jpgg, mtl)'
          type: string
          example: obj
        purpose:
          type: string
          enum:
            - material_definition
            - object_model
            - texture
            - object_thumbnail
          description: |
            The purpose of the uploaded blob:
             * `material_definition` - A material definition that is to apply material to an object file.
             * `object_model` - An object file (usually `.stl` or `.obj`)
             * `texture` - A texture image that can be applied to an object model.
             * `object_thumbnail` - A thumbnail for an object file.
          example: object_model
      required:
        - id
        - created
        - filename
        - type
        - purpose
      example:
        id: blob_3a84a3a23423489adfaa74aA
        created: 1697134565
        filename: model.obj
        type: obj
        purpose: object_model
    RequestID:
      type: string
      format: uuid
      example: 3f49426c-b914-4776-b029-8f912a5f2907
    Error:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          example: this is an error message
      required:
        - message
    HealthCheckResponse:
      type: object
      additionalProperties: false
      properties:
        error:
          $ref: '#/components/schemas/Error'
      required:
        - request_id
